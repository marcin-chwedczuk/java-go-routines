/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pl.marcinchwedczuk.jgr;

public class App {
    public static void main(String[] args) {
        try {
            Trampoline.run(App::mainThunk);
        } catch (InterruptedException e) {
            System.err.println("Process was interrupted...");
            System.exit(1);
        }
    }

    public static Thunk mainThunk() {
        return Trampoline.<Integer>fork(
                chan -> Trampoline.fork(
                        () -> Trampoline.delay(500, () -> producer(chan, 0)),
                        () -> producer(chan, 0)),
                chan -> consumer(chan));
    }

    private static Thunk producer(Channel<Integer> chan, int n) {
        return Trampoline.delay(1000, () ->
                chan.send(n, () ->
                producer(chan, n+1)));
    }

    private static Thunk consumer(Channel<Integer> chan) {
        return chan.receive(n -> {
            System.out.println("Received " + n);
            return consumer(chan);
        });
    }
}
